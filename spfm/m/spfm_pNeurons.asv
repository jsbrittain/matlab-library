function spfm_pNeurons(sim);
%function spfm_pNeurons(sim);
%
% Sigma Pulse Frequency Modulation (SPFM) Network Simulator
%
% Plot routine to display individual membrane potential fluctuations and
% spike firing times.
%
% Input parameter
%       sim         SPFM network simulation output
%
%function spfm_pNeurons(sim);

% Plot results
figure;
unitheight=3;
M=length(sim.neurons);
for m=1:M
    subplot(M,1,m);
    % Plot membrane potential
    plot(sim.time,sim.neurons{m}.v,'k');
    hold on;
    % Plot marker delineating neuron spike
    if (~isempty(sim.neurons{m}.spikes))
        ypos=min(sim.neurons{m}.v)+1.1*(max(sim.neurons{m}.v)-min(sim.neurons{m}.v));
        plot(sim.neurons{m}.spikes,ypos,'k.');
    end;
    xlim(sim.time([1 end]));
    ymax=min(sim.neurons{m}.v)+1.2*(max(sim.neurons{m}.v)-min(sim.neurons{m}.v));
    ylim([min(sim.neurons{m}.v) ymax]);
    title(['NEURON ' int2str(m) ': ' int2str(length(sim.neurons{m}.spikes)) ' SPIKES (' num2str(length(sim.neurons{m}.spikes)/sim.config.secs) ' PER SECOND)']);
end;
xlabel('TIME (SECS)');

% Display statistics
disp(' ');
disp('Node statistics');
N=sim.config.secs/sim.config.dt+1;
warning off;
for m=1:M
    spcount=length(sim.neurons{m}.spikes);
    mu=spcount/N/dt;
    sd=sqrt((spcount*(1-mu)^2+(N-spcount)*mu^2)/N);
    disp(sprintf('  node %2g:    mu=%4.2f, sd=%4.2f, cov=%3.1f',m,mu,sd,sd/mu));
end;
warning on;
disp(' ');
